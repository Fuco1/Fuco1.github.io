#+TITLE: Turn on context-aware modes on shell command output
#+DATE: 2017-04-29

* DONE Turn on context-aware modes on shell command output          :ignore:publish:
  CLOSED: [2017-04-29 Sat 23:10]
   :LOGBOOK:
   - State "DONE"       from              [2017-04-29 Sat 23:10]
   :END:

These days I work with PHP quite a lot; and especially with PHP calling REST APIs.  I have written a little snippet to execute current buffer using =async-shell-command=  and usually run small helper functions or little prototype scripts directly from Emacs as I develop them.

The return values (really the process output) is JSON most of the time.  So why not have the output buffer in =json-mode= when appropriate?

The little difficulty here is that the process runs asynchronously so I have to hook into the sentinel to know when things are finished.  I do that with the next advice[fn:190762e147cd716f:This code depends on =json= (built-in) and =json-mode= (get from MELPA).].  If the process finished, try to parse the buffer and if it contains valid JSON turn on =json-mode= and beautify the content for easier reading.

#+NAME: shell-mode-shell-command-sentinel
#+BEGIN_SRC elisp :tangle no
(defadvice shell-command-sentinel (after enable-better-mode activate)
  (when (memq (process-status (ad-get-arg 0)) '(exit signal))
    (with-current-buffer (process-buffer (ad-get-arg 0))
      (when (save-excursion
              (goto-char (point-min))
              (ignore-errors (json-read)))
        (json-mode)
        (json-mode-beautify)))))
#+END_SRC

You can of course add more "handlers" to check for XML or TAP output and so on.  [[https://github.com/Fuco1/.emacs.d/issues/new][Let me know]] if you create something awesome!

